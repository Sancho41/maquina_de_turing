config 2 0 reconhecedor

; fitas: <principal> <pilha de operadores>

;VAI PARA A VERIFICAÇÃO DE DECLARAÇÃO;

0 ~ ~ ~ : ~ ~ ~ identacao

0 \s ~ ~ : ~ ~ l verifica_pilha

verifica_pilha \s ~ ~ : \s ~ ~ HALT-ACCEPT

;VAI PARA VERIFICAÇÃO DE NOVA LINHA
0 \n ~ ~ : ~ ~ ~ novalinha

;VAI PARA VERIFICAÇÃO DE INCLUDE E DEFINE
0 # ~ r : \s ~ ~ IOD

;VAI PARA A VERIFICAÇÃO DE COMENTÁRIO
0 / ~ r : ~ ~ ~ comentario

0 } ~ ~ : ~ ~ ~ identacao
colchete } ~ r : { \s ~ colchete2
colchete2 \n ~ ~ : ~ ~ ~ 0

; VERIFICA INCLUDE OU DEFINE
IOD i ~ r : ~ ~ ~ c1n
IOD d ~ r : ~ ~ ~ d1e1

;INCLUDE
; verifica se está escrito exatamente #include
c1n n ~ r : ~ ~ ~ c1c
c1c c ~ r : ~ ~ ~ c1l
c1l l ~ r : ~ ~ ~ c1u
c1u u ~ r : ~ ~ ~ c1d
c1d d ~ r : ~ ~ ~ c1e
c1e e ~ r : ~ ~ ~ c1s
c1s \s ~ r : ~ ~ ~ c1a

; Verifica abertura de marcador
c1a " ~ r : \s " r c1b
c1a < ~ r : \s < r c1b

;Verifica se o que está dentro dos marcadores não tem espaço ne nova linha nem tab
c1b ~ ~ r : \s ~ ~ c1b
c1b \s ~ ~ : ~ ~ ~ HALT-REJECT
c1b \t ~ ~ : ~ ~ ~ HALT-REJECT
c1b \n ~ ~ : ~ ~ ~ HALT-REJECT
c1b " ~ ~ : \s ~ l c1c
c1b > ~ ~ : \s ~ l c1c

; Verifica fechamento de marcador
c1c " ~ r : " \s ~ c1f
c1c > ~ r : < \s ~ c1f
c1f \n ~ r : ~ ~ ~ 0

;DEFINE
; verifica se está escrito exatamente #define
d1e1 e ~ r : ~ ~ ~ d1f
d1f f ~ r : ~ ~ ~ d1i
d1i i ~ r : ~ ~ ~ d1n
d1n n ~ r : ~ ~ ~ d1e2
d1e2 e ~ r : ~ ~ ~ d1s
d1s \s ~ r : ~ ~ ~ dvar

dvar ~ ~ r : ~ ~ ~ dvar
dvar \n ~ ~ : ~ ~ ~ HALT-REJECT
dvar \t ~ ~ : ~ ~ ~ HALT-REJECT
dvar \s ~ ~ : ~ ~ ~ dvalue

dvalue ~ ~ r : ~ ~ ~ dnumero
dvalue " ~ r : ~ ~ ~ dstring
dvalue ' ~ r : ~ ~ ~ dchar

dnumero ~ ~ r : ~ ~ ~ dnumero
dnumero \s ~ ~ : ~ ~ ~ HALT-REJECT
dnumero \t ~ ~ : ~ ~ ~ HALT-REJECT
dnumero \n ~ r : ~ ~ ~ 0

dstring ~ ~ r : ~ ~ ~ dstring
dstring \n ~ ~ : ~ ~ ~ HALT-REJECT
dstring " ~ r : ~ ~ ~ dstring_fim
dstring_fim \n ~ r : ~ ~ ~ 0

dchar ~ ~ r : ~ ~ ~ dchar_fim
dchar_fim ' ~ r : ~ ~ ~ dchar_fim2
dchar_fim2 \n ~ r : ~ ~ ~ 0 

;VERIFICA COMENTARIO
comentario / ~ r : ~ ~ ~ comentario2

comentario2 \s ~ r : ~ ~ ~ comentario3

;verifica se tem mais de um em branco consecutivo, para evitar loop
comentario3 ~ ~ r : ~ ~ ~ comentario4
comentario3 \s ~ r : ~ ~ ~ comentario3.1
comentario3.1 ~ ~ r : ~ ~ ~ comentario3
comentario3.1 \s ~ ~ : ~ ~ ~ HALT-REJECT

comentario4 ~ ~ r : \s ~ ~ comentario4
comentario4 \s ~ ~ : ~ ~ ~ comentario3
comentario4 \n ~ r : \s ~ ~ 0


;VERIFICA NOVA LINHA
novalinha \n ~ r : ~ ~ ~ novalinha2
novalinha2 ~ ~ ~ : ~ ~ ~ 0
novalinha2 \n ~ r : ~ ~ ~ novalinha3
novalinha3 ~ ~ ~ : ~ ~ ~ 0
novalinha3 \n ~ r : ~ ~ ~ HALT-REJECT

;VERIFICA DECLARACAO;
;identacao
identacao ~ ~ ~ : ~ ~ l identacao1
identacao1 ~ ~ r : \s ~ r declaracao1
identacao1 \t ~ r : { ~ l identacao2
identacao1 } ~ ~ : { ~ ~ identacao2
identacao1 } ~ ~ : i \s l identacao1

;ignora do
identacao1 \t ~ ~ : d ~ l identacao2
identacao1 \t ~ ~ : i ~ l identacao2


identacao2 ~ ~ ~ : ~ ~ r declaracao_ident1
identacao2 } ~ ~ : ~ ~ ~ HALT-REJECT
identacao2 ~ ~ r : { ~ ~ HALT-REJECT
identacao2 } ~ r : { ~ l identacao_colchete.1
identacao2 } ~ ~ : d ~ l identacao2
identacao2 } ~ ~ : i ~ l identacao2
identacao2 \t ~ r : ~ ~ ~ HALT-REJECT
identacao2 \t ~ ~ : d ~ l identacao2
identacao2 \t ~ ~ : i ~ l identacao2
identacao2 \t ~ r : { ~ l identacao2

identacao_colchete.1 \n ~ ~ : ~ ~ r identacao_colchete.2
identacao_colchete.1 w ~ ~ : ~ ~ r identacao_colchete.do_while
identacao_colchete.1 ~ ~ ~ : { ~ ~ HALT-REJECT
identacao_colchete.2 ~ ~ ~ : ~ ~ r identacao_colchete.2
identacao_colchete.2 ~ ~ ~ : \s ~ l identacao_colchete.3
identacao_colchete.3 ~ ~ ~ : i \s l identacao_colchete.3
identacao_colchete.3 ~ ~ ~ : { \s ~ 0

identacao_colchete.do_while ~ ~ ~ : ~ ~ r identacao_colchete.do_while
identacao_colchete.do_while ~ ~ ~ : \s ~ l identacao_colchete.do_while2
identacao_colchete.do_while2 ~ ~ ~ : { \s l identacao_colchete.do_while3
identacao_colchete.do_while3 w ~ r : d ~ r verifica_while

declaracao_ident1 ~ ~ ~ : ~ ~ r declaracao_ident1
declaracao_ident1 ~ ~ ~ : \s ~ ~ declaracao1

;tipo
declaracao1 ~ ~ ~ : ~ ~ l declaracao_verifica_else
declaracao1 \n ~ ~ : ~ ~ ~ 0
declaracao_verifica_else ~ ~ ~ : ~ ~ r declaracao1.1
declaracao_verifica_else ~ ~ ~ : i \s ~ declaracao1.1
declaracao_verifica_else e ~ r : i ~ ~ verifica_else


declaracao1.1 ~ ~ r : ~ ~ ~ declaracao1.1
declaracao1.1 \s ~ r : ~ ~ ~ verifica_tipo_declaracao
declaracao1.1 ; ~ r : ~ ~ ~ var_solta
declaracao1.1 ( ~ r : ~ ( r invoca_funcao
declaracao1.1 / ~ r : ~ ~ ~ comentario

declaracao1.1 i ~ r : ~ ~ ~ verifica_if
declaracao1.1 w ~ r : ~ ~ ~ verifica_while
declaracao1.1 f ~ r : ~ ~ ~ verifica_for
declaracao1.1 d ~ r : ~ ~ ~ verifica_do_while


;Uma variável solta
var_solta \n ~ r : ~ ~ ~ 0

;invacacao de função
invoca_funcao ~ ~ ~ : \s c r invoca_funcao2
invoca_funcao2 ~ ~ ~ : ~ ~ ~ op_var

invoca_funcao \n ~ ~ : ~ ~ ~ HALT-REJECT
invoca_funcao \s ~ ~ : ~ ~ ~ HALT-REJECT
invoca_funcao \t ~ ~ : ~ ~ ~ HALT-REJECT
invoca_funcao ; ~ ~ : ~ ~ ~ HALT-REJECT
invoca_funcao ) ~ ~ : ~ ~ l invoca_funcao_fim

;fim da funcao
invoca_funcao_fim ) ~ r : ( \s ~ invoca_funcao_fim2
invoca_funcao_fim2 ; ~ r : ~ ~ ~ invoca_funcao_fim3
invoca_funcao_fim3 \n ~ r : ~ ~ ~ 0

;depois do espaço não pode haver \t \s \n
verifica_tipo_declaracao ~ ~ r : ~ ~ ~ declaracao_nome
verifica_tipo_declaracao = ~ r : ~ ~ ~ atribuicao
verifica_tipo_declaracao \s ~ ~ : ~ ~ ~ HALT-REJECT
verifica_tipo_declaracao \n ~ ~ : ~ ~ ~ HALT-REJECT
verifica_tipo_declaracao \t ~ ~ : ~ ~ ~ HALT-REJECT


;nome
declaracao_nome ~ ~ r : ~ ~ ~ declaracao_nome
declaracao_nome \n ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_nome \t ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_nome ( ~ r : ~ ( r declaracao_funcao
declaracao_nome ; ~ r : ~ ~ ~ declaracao_nome.1
declaracao_nome \s ~ r : ~ ~ ~ checka_atribuicao
checka_atribuicao = ~ r : ~ ~ ~ atribuicao
declaracao_nome.1 \n ~ ~ : ~ ~ ~ 0

declaracao_funcao ~ ~ r : ~ ~ ~ declaracao_funcao_tipo
declaracao_funcao ) ~ ~ : ~ ~ l declaracao_funcao_fim
declaracao_funcao_tipo ~ ~ r : ~ ~ ~ declaracao_funcao_tipo
declaracao_funcao_tipo \n ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_tipo \t ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_tipo ; ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_tipo ) ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_tipo , ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_tipo \s ~ r : ~ ~ ~ declaracao_funcao_var

declaracao_funcao_var ~ ~ r : ~ ~ ~ declaracao_funcao_var
declaracao_funcao_var \s ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_var \t ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_var \n ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_var ; ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_var ( ~ ~ : ~ ~ ~ HALT-REJECT
declaracao_funcao_var , ~ r : ~ ~ ~ declaracao_funcao_var_prox
declaracao_funcao_var_prox \s ~ r : ~ ~ ~ declaracao_funcao_tipo
declaracao_funcao_var ) ~ ~ : ~ ~ l declaracao_funcao_fim

declaracao_funcao_fim ) ~ r : ( \s ~ declaracao_funcao_fim2
declaracao_funcao_fim2 \n ~ r : ~ ~ ~ declaracao_ident_f

declaracao_ident_f ~ ~ ~ : ~ ~ l declaracao_ident_f1

declaracao_ident_f1 ~ ~ ~ : ~ ~ r declaracao_ident_f2
declaracao_ident_f1 ~ ~ r : { ~ l HALT-REJECT
declaracao_ident_f1 \t ~ r : ~ ~ l HALT-REJECT
declaracao_ident_f1 \t ~ r : { ~ l declaracao_ident_f1
declaracao_ident_f1 \t ~ ~ : d ~ l declaracao_ident_f1
declaracao_ident_f1 \t ~ ~ : i ~ l declaracao_ident_f1

declaracao_ident_f2 ~ ~ ~ : ~ ~ r declaracao_ident_f2
declaracao_ident_f2 ~ ~ ~ : \s ~ ~ declaracao_ident_f3

declaracao_ident_f3 { ~ r : ~ { r declaracao_ident_f4
declaracao_ident_f4 \n ~ r : ~ ~ ~ 0


atribuicao \s ~ r : \s a r op_var

atribuicao2 ~ ~ r : ~ ~ ~ atribuicao_var
atribuicao2 ; ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao2 \s ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao2 \t ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao2 " ~ r : ~ " r atribuicao_string

atribuicao_var ~ ~ r : ~ ~ ~ atribuicao_var
atribuicao_var \s ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao_var \n ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao_var \t ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao_var ; ~ ~ : ~ ~ ~ atribuicao_fim1

atribuicao_string ~ ~ r : ~ ~ ~ atribuicao_string
atribuicao_string \n ~ ~ : ~ ~ ~ HALT-REJECT
atribuicao_string " ~ ~ : ~ ~ l atribuicao_string_fim
atribuicao_string \ ~ r : ~ ~ ~ atribuicao_string_ignore
atribuicao_string_ignore ~ ~ r : ~ ~ ~ atribuicao_string

atribuicao_string_fim " ~ r : " \s ~ atribuicao_fim1

atribuicao_fim1 ; ~ r : ~ ~ ~ atribuicao_fim2
atribuicao_fim2 \n ~ r : ~ ~ ~ 0

;VERIFICA IF
verifica_if ~ ~ ~ : ~ ~ ~ declaracao1.1
verifica_if f ~ r : ~ ~ ~ verifica_if2
verifica_if2 ~ ~ ~ : ~ ~ ~ declaracao1.1
verifica_if2 \s ~ r : ~ ~ ~ verifica_if3
verifica_if3 ( ~ r : \s ( r conteudo_if
conteudo_if ~ ~ ~ : \s i r op_var

;VERIFICA ELSE
verifica_else ~ ~ ~ : i \s ~ declaracao1.1
verifica_else l ~ r : i ~ ~ verifica_else_s

verifica_else_s ~ ~ ~ : i \s ~ declaracao1.1
verifica_else_s s ~ r : i ~ ~ verifica_else_e

verifica_else_e ~ ~ ~ : i \s ~ declaracao1.1
verifica_else_e e ~ r : i ~ ~ verifica_else_sp

verifica_else_sp ~ ~ ~ : i \s ~ declaracao1.1
verifica_else_sp \s ~ r : i \s ~ verifica_else_if
verifica_else_sp \n ~ r : i \s ~ declaracao_ident_f

verifica_else_if i ~ r : ~ ~ ~ verifica_else_if_f
verifica_else_if_f f ~ r : ~ ~ ~ verifica_else_if_s
verifica_else_if_s \s ~ r : ~ ~ ~ verifica_if3


;VERIFICA WHILE
verifica_while ~ ~ ~ : ~ ~ ~ verifica_while_h
verifica_while_h ~ ~ ~ : ~ ~ ~ declaracao1
verifica_while_h h ~ r : ~ ~ ~ verifica_while_i
verifica_while_i ~ ~ ~ : ~ ~ ~ declaracao1
verifica_while_i i ~ r : ~ ~ ~ verifica_while_l
verifica_while_l ~ ~ ~ : ~ ~ ~ declaracao1
verifica_while_l l ~ r : ~ ~ ~ verifica_while_e
verifica_while_e ~ ~ ~ : ~ ~ ~ declaracao1
verifica_while_e e ~ r : ~ ~ ~ verifica_while_s
verifica_while_s ~ ~ r : ~ ~ ~ declaracao1
verifica_while_s \s ~ r : ~ ~ ~ verifica_while__
verifica_while__ ( ~ r : ~ ~ l verifica_do_while_init

verifica_do_while_init ~ ~ ~ : ~ ~ r verifica_do_while_init1
verifica_do_while_init ~ ~ ~ : d ( r verifica_do_while_init_do

verifica_do_while_init1 ~ ~ ~ : \s ( r verifica_do_while_init2
verifica_do_while_init2 ~ ~ ~ : \s w r op_var

verifica_do_while_init_do ~ ~ ~ : \s d r op_var

;VERIFICA DO WHILE
verifica_do_while ~ ~ ~ : ~ ~ ~ verifica_do_while_o
verifica_do_while_o ~ ~ ~ : ~ ~ ~ declaracao1
verifica_do_while_o o ~ r : ~ ~ ~ verifica_do_while_n
verifica_do_while_n ~ ~ ~ : ~ ~ ~ declaracao1
verifica_do_while_n \n ~ r : \s d r declaracao_ident_f

;VERIFICA FOR
verifica_for ~ ~ ~ : ~ ~ ~ verifica_for_o
verifica_for_o ~ ~ ~ : ~ ~ ~ declaracao1
verifica_for_o o ~ r : ~ ~ ~ verifica_for_r
verifica_for_r ~ ~ ~ : ~ ~ ~ declaracao1
verifica_for_r r ~ r : ~ ~ ~ verifica_for_s
verifica_for_s ~ ~ ~ : ~ ~ ~ declaracao1
verifica_for_s \s ~ r : ~ ~ ~ verifica_for__
verifica_for__ ( ~ r : \s ( r verifica_for_conteudo1
verifica_for_conteudo1 ~ ~ ~ : \s f r verifica_for_conteudo2
verifica_for_conteudo2 ~ ~ ~ : \s f r verifica_for_conteudo3
verifica_for_conteudo3 ~ ~ ~ : \s f r op_var

;op ~ ~ ~ : ~ ( r op1
;op1 ~ ~ ~ : ~ i r op_var
op_var ~ ~ r : ~ ~ ~ op_var
op_var \s ~ r : ~ ~ ~ op_operator
op_var \t ~ r : ~ ~ ~ halt-reject
op_var \n ~ r : ~ ~ ~ halt-reject
op_var ( ~ r : ~ ( r op_var
op_var ) ~ ~ : ~ ~ l op_par
op_var ; ~ ~ : ~ ~ l op_fim
op_var , ~ ~ : ~ ~ l op_fim

op_var " ~ r : \s " r op_string
op_var ' ~ r : \s ' r op_string

op_string ~ ~ r : ~ ~ ~ op_string
op_string \n ~ ~ : ~ ~ ~ HALT-REJECT
op_string " ~ ~ : ~ ~ l op_string_check
op_string ' ~ ~ : ~ ~ l op_string_check
op_string_check " ~ r : " \s ~ op_var
op_string_check ' ~ r : ' \s ~ op_var

op_par ) ~ r : ( \s ~ op_par2

op_par ) ~ r : i \s l op_ident_if
op_par ) ~ r : c \s l op_ident
op_par ) ~ r : w \s l op_ident
op_par ) ~ r : f \s l op_ident
op_par ) ~ r : d \s l op_fim_do_while

op_ident_if \n ~ r : ( i ~ declaracao_ident_f
op_ident_if ; ~ r : ( \s ~ op_ident2

op_par2 \s ~ r : ~ ~ ~ op_operator
op_par2 ) ~ ~ : ~ ~ l op_par
op_par2 ; ~ ~ : ~ ~ l op_fim
op_par2 \n ~ ~ : ~ ~ l op_fim
op_par2 , ~ ~ : ~ ~ l op_fim

op_operator * ~ r : ~ ~ ~ op_operator2
op_operator / ~ r : ~ ~ ~ op_operator2
op_operator % ~ r : ~ ~ ~ op_operator2
op_operator + ~ r : ~ ~ ~ op_operator2
op_operator - ~ r : ~ ~ ~ op_operator2
op_operator ! ~ r : ~ ~ ~ op_operator_dif
op_operator = ~ r : ~ ~ ~ op_operator2_eq
op_operator & ~ r : ~ ~ ~ op_operator2_and
op_operator | ~ r : ~ ~ ~ op_operator2_or
op_operator > ~ r : ~ ~ ~ op_operator2_gol
op_operator < ~ r : ~ ~ ~ op_operator2_gol

op_operator2_gol ~ ~ ~ : ~ ~ ~ op_operator2
op_operator2_gol = ~ r : ~ ~ ~ op_operator2

op_operator_dif ~ ~ ~ : ~ ~ ~ op_operator2
op_operator_dif = ~ r : ~ ~ ~ op_operator2

op_operator2_eq = ~ r : ~ ~ ~ op_operator2
op_operator2_eq \s ~ ~ : ~ ~ ~ op_operator2
op_operator2_and & ~ r : ~ ~ ~ op_operator2
op_operator2_or | ~ r : ~ ~ ~ op_operator2

op_operator2 \s ~ r : ~ ~ ~ op_operator2.1
op_operator2.1 ~ ~ ~ : ~ ~ ~ op_var
op_operator2.1 \s ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 \n ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 \t ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 { ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 } ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 ) ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 ; ~ ~ : ~ ~ ~ HALT-REJECT
op_operator2.1 / ~ ~ : ~ ~ ~ HALT-REJECT

op_ident \n ~ r : ( \s ~ declaracao_ident_f
op_ident ; ~ r : ( \s ~ op_ident2
op_ident2 \n ~ r : ~ ~ ~ 0

op_fim_do_while ; ~ r : ( \s ~ op_fim_do_while_2
op_fim_do_while_2 \n ~ r : ~ ~ ~ 0

op_fim , ~ r : c ~ r op_fim2
op_fim2 \s ~ r : ~ ~ ~ op_var

op_fim ; ~ r : f \s ~ op_fim2.1
op_fim2.1 \s ~ r : ~ ~ ~ op_var

op_fim ; ~ r : a \s ~ op_ident2

;mais 27 instruções